@model toanggg.Data.Trainer
@using System.Data.SqlClient;

@{
    ViewData["Title"] = "Trainer Detail";
    Layout = "_LayoutCustomer";
}

<style>
    h1, h2, h3, h4, h5, h6 {
        margin-top: 0;
        margin-bottom: .5rem;
        font-family: "Roboto Condensed",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;
    }

    .roboto {
        font-family: "Roboto Condensed", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
    }
</style>
<section class="breadcrumb-section set-bg" data-setbg="/img/hero/hinh-1.jpg">
    <div class="container mt-5">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb-text">
                    <div class="bt-option">
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="container-fluid detail-form-list spad">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between">
                    <div class="header-title">
                        <h4 class="card-title">Chi tiết về huấn luyện viên</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <img src="~/Hinh/HinhGym/@GetAvatarForTrainer(Model.TrainerId)" class="img-fluid rounded-circle" alt="@Model.FullName" />
                        </div>

                        <div class="col-md-8">
                            <form method="post" data-toggle="validator" enctype="multipart/form-data">
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <h3>@Model.FullName</h3>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Số điện thoại</label>
                                            <input readonly class="form-control" required value="@Model.PhoneNumber" />

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Email</label>
                                            <input readonly class="form-control" required value="@Model.Email" />

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Chuyên môn</label>
                                            <input readonly class="form-control" required value="@Model.Description" />

                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="row mt-5">
                    <div class="col-md-12">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

@functions {
    public string GetAvatarForTrainer(int trainerId)
    {
        string connectionString = "Data Source=LAPTOP-T4RGGNJJ;Initial Catalog=DACS;Integrated Security=True";
        string avatar = string.Empty;

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            connection.Open();

            // Step 1: Get UserId from Trainers table
            string getUserIdQuery = "SELECT user_id FROM Trainers WHERE trainer_id = @TrainerId";
            int userId = 0;
            using (SqlCommand command = new SqlCommand(getUserIdQuery, connection))
            {
                command.Parameters.AddWithValue("@TrainerId", trainerId);
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.Read())
                    {
                        userId = reader.GetInt32(reader.GetOrdinal("user_id"));
                    }
                }
            }

            if (userId != 0)
            {
                // Step 2: Get Avatar from Users table
                string getAvatarQuery = "SELECT Avatar FROM Users WHERE user_id = @UserId";
                using (SqlCommand command = new SqlCommand(getAvatarQuery, connection))
                {
                    command.Parameters.AddWithValue("@UserId", userId);
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        if (reader.Read())
                        {
                            avatar = reader.GetString(reader.GetOrdinal("Avatar"));
                        }
                    }
                }
            }
        }

        return avatar;
    }
}
